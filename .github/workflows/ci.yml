name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: '1.89.0'

jobs:
  check:
    name: Format & Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: rustfmt (check)
        run: cargo fmt --all -- --check

      - name: cargo check
        run: cargo check --all-targets --all-features

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Test
        run: cargo test --all-features --all-targets --no-fail-fast

  build:
    name: Build (Release)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build
        run: cargo build --release

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dcup-linux-amd64
          path: target/release/dcup
          if-no-files-found: error
          retention-days: 7

  release:
    name: Release (tagged)
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: dcup-linux-amd64
            bin_path: target/release/dcup
            archive: dcup-${{ github.ref_name }}-linux-amd64.tar.gz
            archive_cmd: tar -czf
          - os: macos-14
            artifact_name: dcup-macos-aarch64
            bin_path: target/release/dcup
            archive: dcup-${{ github.ref_name }}-macos-aarch64.tar.gz
            archive_cmd: tar -czf
          - os: windows-latest
            artifact_name: dcup-windows-x86_64
            bin_path: target/release/dcup.exe
            archive: dcup-${{ github.ref_name }}-windows-x86_64.zip
            archive_cmd: powershell -Command "Compress-Archive -Path"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build (release)
        run: cargo build --release

      - name: Package binary (tar/zip)
        shell: bash
        run: |
          set -euo pipefail
          out="${{ matrix.archive }}"
          bin="${{ matrix.bin_path }}"
          # Ensure parent dir
          mkdir -p dist
          case "${{ runner.os }}" in
            Linux|macOS)
              chmod +x "$bin"
              ${{ matrix.archive_cmd }} "dist/$out" -C "$(dirname "$bin")" "$(basename "$bin")"
              ;;
            Windows)
              pwsh -NoProfile -Command "Compress-Archive -Path '${{ matrix.bin_path }}' -DestinationPath 'dist/${{ matrix.archive }}' -Force"
              ;;
          esac
          echo "PACKAGED=dist/$out" >> $GITHUB_ENV

      - name: Upload packaged artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ env.PACKAGED }}
          if-no-files-found: error
          retention-days: 7

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
          files: |
            dist/${{ matrix.archive }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
